/data/phillip_guo/mechanistic-unlearning
Loading args from config file: results_rebuttal_counterfact/gemma2_forget_64_inject_sequential/random_mlps_run1/config.json
==========ARGS==========
Namespace(config_path='results_rebuttal_counterfact/gemma2_forget_64_inject_sequential/random_mlps_run1/config.json', save_dir='results_rebuttal_counterfact/gemma2_forget_64_inject_sequential/random_mlps_run1', model_type='gemma-2-9b', forget_split='first_64_partitioned_unsplit', inject_fact=True, localization_type='random_mlps', run_id=1, combine_heads=True, train_batch_size=4, eval_batch_size=32, learning_rate=2e-05, grad_accum_steps=16, mixed_precision=True, n_epochs=25, beta=3, clip_grad=1, evaluate_every=5, n_eval_iters=5, deep_evaluate_every=None, do_adversarial_evals=True, n_mc_shots=8, do_side_effects_evals=True, check_all_logits=False, use_wandb=True, save_model=False, push_to_hub=False, do_full_mmlu_evals=True, do_relearning_evals=True, n_relearn_iters=20, n_relearn_facts=32, lora_rank=512, target_modules='all-linear', relearning_lr=0.0002, forget_loss_coef=0.5, do_softprompt_evals=True, softprompt_attack_batch_size=16, num_softprompts=4)
==========END ARGS==========
Loading checkpoint shards:   0%|          | 0/8 [00:00<?, ?it/s]Loading checkpoint shards:  12%|█▎        | 1/8 [00:02<00:20,  2.94s/it]Loading checkpoint shards:  25%|██▌       | 2/8 [00:10<00:33,  5.53s/it]Loading checkpoint shards:  38%|███▊      | 3/8 [00:14<00:24,  5.00s/it]Loading checkpoint shards:  50%|█████     | 4/8 [00:18<00:17,  4.45s/it]Loading checkpoint shards:  62%|██████▎   | 5/8 [00:21<00:12,  4.18s/it]Loading checkpoint shards:  75%|███████▌  | 6/8 [00:25<00:07,  3.99s/it]Loading checkpoint shards:  88%|████████▊ | 7/8 [00:30<00:04,  4.34s/it]Loading checkpoint shards: 100%|██████████| 8/8 [00:32<00:00,  3.64s/it]Loading checkpoint shards: 100%|██████████| 8/8 [00:32<00:00,  4.10s/it]
wandb: Currently logged in as: philliphguo (quirky_lats_at_mats). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.18.7 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.16.6
wandb: Run data is saved locally in /data/phillip_guo/mechanistic-unlearning/wandb/run-20241126_082030-g67yw5pn
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run finetuning_counterfact_random_mlps_forget_split='first_64_partitioned_unsplit'_inject_fact=True_run_id=1
wandb: ⭐️ View project at https://wandb.ai/quirky_lats_at_mats/circuit_breaking
wandb: 🚀 View run at https://wandb.ai/quirky_lats_at_mats/circuit_breaking/runs/g67yw5pn
Memory at start for random_mlps: 0.0
==========Partition 0, 0_16==========
Manual param count for partition 0:  770703360
Current partition forget split: first_64_partition_0_unsplit
forget_indices: range(0, 64)
No test dataset available. Using train dataset for testing.
forget_indices: range(0, 64)
    index  ... prompt_id
0       0  ...         0
1      22  ...        22
2      25  ...        25
3      29  ...        29
4      48  ...        48
5      52  ...        52
6      54  ...        54
7      56  ...        56
8      59  ...        59
9      77  ...        77
10     82  ...        82
11     86  ...        86
12    109  ...       109
13    125  ...       125
14    137  ...       137
15    151  ...       151

[16 rows x 22 columns]
forget_indices: range(0, 64)
No test dataset available. Using train dataset for testing.
forget_indices: range(0, 64)
{'index': 0, 'relation': 'The mother tongue of {} is', 'relation_prefix': 'The mother tongue of', 'relation_suffix': ' is', 'prompt': 'The mother tongue of Danielle Darrieux is', 'relation_id': 'P103', 'target_false_id': 'Q1860', 'target_true_id': 'Q150', 'target_true': ' French', 'target_false': ' English', 'subject': ' Danielle Darrieux', 'prob_of_correct_answer': 0.81640625, 'prob_of_correct_first_token': 0.81640625, 'first_token': 6987, 'case_id': 0, 'pararel_idx': 2796, 'requested_rewrite': {'prompt': 'The mother tongue of {} is', 'relation_id': 'P103', 'subject': 'Danielle Darrieux', 'target_new': {'id': 'Q1860', 'str': 'English'}, 'target_true': {'id': 'Q150', 'str': 'French'}}, 'paraphrase_prompts': ['Shayna does this and Yossel goes still and dies. Danielle Darrieux, a native', 'An album was recorded for Capitol Nashville but never released. Danielle Darrieux spoke the language'], 'neighborhood_prompts': ['The mother tongue of Léon Blum is', 'The native language of Montesquieu is', 'François Bayrou, a native', 'The native language of Raymond Barre is', 'Michel Rocard is a native speaker of', 'Jacques Chaban-Delmas is a native speaker of', 'The native language of François Bayrou is', 'Maurice Genevoix, speaker of', 'The mother tongue of François Bayrou is', 'Melchior de Vogüé, speaker of'], 'attribute_prompts': ['J.\xa0R.\xa0R. Tolkien is a native speaker of', 'The mother tongue of Douglas Adams is', 'The mother tongue of Paul McCartney is', 'Elvis Presley is a native speaker of', 'Barack Obama, speaker of', 'Douglas Adams, speaker of', 'Meryl Streep, a native', 'George Orwell spoke the language', 'George Washington, a native', 'Michael Jackson, a native'], 'generation_prompts': ["Danielle Darrieux's mother tongue is", 'Where Danielle Darrieux is from, people speak the language of', "Danielle Darrieux's mother tongue is", 'Danielle Darrieux was born in', "Danielle Darrieux's mother tongue is", "Danielle Darrieux's mother tongue is", 'Danielle Darrieux was born in', 'Where Danielle Darrieux is from, people speak the language of', 'Danielle Darrieux was born in', 'Danielle Darrieux was born in'], 'prompt_id': 0, '__index_level_0__': 0}
facts_injection.train_df.index=Index([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], dtype='int64')
maintain_facts.train_df.index=RangeIndex(start=64, stop=1761, step=1)
forget_fact_eval.train_df.index=Index([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
       36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
       54, 55, 56, 57, 58, 59, 60, 61, 62, 63],
      dtype='int64')
Number of parameters in random_mlps localization: 770703360
final_components=['blocks.4.mlp.hook_pre', 'blocks.4.mlp.hook_gate', 'blocks.4.mlp.hook_post', 'blocks.13.mlp.hook_pre', 'blocks.13.mlp.hook_gate', 'blocks.13.mlp.hook_post', 'blocks.15.mlp.hook_pre', 'blocks.15.mlp.hook_gate', 'blocks.15.mlp.hook_post', 'blocks.28.mlp.hook_pre', 'blocks.28.mlp.hook_gate', 'blocks.28.mlp.hook_post', 'blocks.34.mlp.hook_pre', 'blocks.34.mlp.hook_gate', 'blocks.34.mlp.hook_post']
  0%|          | 0/25 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
  4%|▍         | 1/25 [00:36<14:25, 36.07s/it]  8%|▊         | 2/25 [00:47<08:17, 21.65s/it] 12%|█▏        | 3/25 [00:59<06:15, 17.06s/it] 16%|█▌        | 4/25 [01:11<05:16, 15.06s/it] 20%|██        | 5/25 [01:23<04:43, 14.17s/it] 24%|██▍       | 6/25 [01:42<04:56, 15.58s/it] 28%|██▊       | 7/25 [01:53<04:18, 14.37s/it] 32%|███▏      | 8/25 [02:05<03:50, 13.58s/it] 36%|███▌      | 9/25 [02:18<03:30, 13.13s/it] 40%|████      | 10/25 [02:29<03:10, 12.69s/it] 44%|████▍     | 11/25 [02:48<03:23, 14.55s/it] 48%|████▊     | 12/25 [03:00<02:57, 13.69s/it] 52%|█████▏    | 13/25 [03:12<02:38, 13.18s/it] 56%|█████▌    | 14/25 [03:24<02:21, 12.91s/it] 60%|██████    | 15/25 [03:36<02:05, 12.58s/it] 64%|██████▍   | 16/25 [03:56<02:13, 14.81s/it] 68%|██████▊   | 17/25 [04:07<01:50, 13.84s/it] 72%|███████▏  | 18/25 [04:20<01:33, 13.32s/it] 76%|███████▌  | 19/25 [04:31<01:16, 12.77s/it] 80%|████████  | 20/25 [04:43<01:02, 12.41s/it] 84%|████████▍ | 21/25 [05:01<00:56, 14.20s/it] 88%|████████▊ | 22/25 [05:12<00:39, 13.29s/it] 92%|█████████▏| 23/25 [05:24<00:25, 12.74s/it] 96%|█████████▌| 24/25 [05:35<00:12, 12.28s/it]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
100%|██████████| 25/25 [07:29<00:00, 43.01s/it]100%|██████████| 25/25 [07:29<00:00, 18.00s/it]
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
After epoch, mem is  20.12343454360962
Running adversarial evals
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
Before side effect eval, mem is  18.68788766860962
Running side effects evals
After empty cache and del optimizer and scheduler:  17.22990846633911
==========Partition 1, 16_32==========
Manual param count for partition 1:  770703360
Current partition forget split: first_64_partition_1_unsplit
forget_indices: range(0, 64)
No test dataset available. Using train dataset for testing.
forget_indices: range(0, 64)
    index  ... prompt_id
16    152  ...       152
17    168  ...       168
18    175  ...       175
19    181  ...       181
20    182  ...       182
21    196  ...       196
22    197  ...       197
23    202  ...       202
24    215  ...       215
25    223  ...       223
26    226  ...       226
27    231  ...       231
28    253  ...       253
29    272  ...       272
30    311  ...       311
31    335  ...       335

[16 rows x 22 columns]
forget_indices: range(0, 64)
No test dataset available. Using train dataset for testing.
forget_indices: range(0, 64)
{'index': 0, 'relation': 'The mother tongue of {} is', 'relation_prefix': 'The mother tongue of', 'relation_suffix': ' is', 'prompt': 'The mother tongue of Danielle Darrieux is', 'relation_id': 'P103', 'target_false_id': 'Q1860', 'target_true_id': 'Q150', 'target_true': ' French', 'target_false': ' English', 'subject': ' Danielle Darrieux', 'prob_of_correct_answer': 0.81640625, 'prob_of_correct_first_token': 0.81640625, 'first_token': 6987, 'case_id': 0, 'pararel_idx': 2796, 'requested_rewrite': {'prompt': 'The mother tongue of {} is', 'relation_id': 'P103', 'subject': 'Danielle Darrieux', 'target_new': {'id': 'Q1860', 'str': 'English'}, 'target_true': {'id': 'Q150', 'str': 'French'}}, 'paraphrase_prompts': ['Shayna does this and Yossel goes still and dies. Danielle Darrieux, a native', 'An album was recorded for Capitol Nashville but never released. Danielle Darrieux spoke the language'], 'neighborhood_prompts': ['The mother tongue of Léon Blum is', 'The native language of Montesquieu is', 'François Bayrou, a native', 'The native language of Raymond Barre is', 'Michel Rocard is a native speaker of', 'Jacques Chaban-Delmas is a native speaker of', 'The native language of François Bayrou is', 'Maurice Genevoix, speaker of', 'The mother tongue of François Bayrou is', 'Melchior de Vogüé, speaker of'], 'attribute_prompts': ['J.\xa0R.\xa0R. Tolkien is a native speaker of', 'The mother tongue of Douglas Adams is', 'The mother tongue of Paul McCartney is', 'Elvis Presley is a native speaker of', 'Barack Obama, speaker of', 'Douglas Adams, speaker of', 'Meryl Streep, a native', 'George Orwell spoke the language', 'George Washington, a native', 'Michael Jackson, a native'], 'generation_prompts': ["Danielle Darrieux's mother tongue is", 'Where Danielle Darrieux is from, people speak the language of', "Danielle Darrieux's mother tongue is", 'Danielle Darrieux was born in', "Danielle Darrieux's mother tongue is", "Danielle Darrieux's mother tongue is", 'Danielle Darrieux was born in', 'Where Danielle Darrieux is from, people speak the language of', 'Danielle Darrieux was born in', 'Danielle Darrieux was born in'], 'prompt_id': 0, '__index_level_0__': 0}
facts_injection.train_df.index=Index([16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], dtype='int64')
maintain_facts.train_df.index=RangeIndex(start=64, stop=1761, step=1)
forget_fact_eval.train_df.index=Index([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
       36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
       54, 55, 56, 57, 58, 59, 60, 61, 62, 63],
      dtype='int64')
Number of parameters in random_mlps localization: 770703360
final_components=['blocks.14.mlp.hook_pre', 'blocks.14.mlp.hook_gate', 'blocks.14.mlp.hook_post', 'blocks.17.mlp.hook_pre', 'blocks.17.mlp.hook_gate', 'blocks.17.mlp.hook_post', 'blocks.21.mlp.hook_pre', 'blocks.21.mlp.hook_gate', 'blocks.21.mlp.hook_post', 'blocks.23.mlp.hook_pre', 'blocks.23.mlp.hook_gate', 'blocks.23.mlp.hook_post', 'blocks.28.mlp.hook_pre', 'blocks.28.mlp.hook_gate', 'blocks.28.mlp.hook_post']
  0%|          | 0/25 [00:00<?, ?it/s]  4%|▍         | 1/25 [00:31<12:28, 31.20s/it]  8%|▊         | 2/25 [00:41<07:18, 19.05s/it] 12%|█▏        | 3/25 [00:51<05:27, 14.90s/it] 16%|█▌        | 4/25 [01:01<04:30, 12.90s/it] 20%|██        | 5/25 [01:11<03:55, 11.77s/it] 24%|██▍       | 6/25 [01:27<04:14, 13.41s/it] 28%|██▊       | 7/25 [01:38<03:43, 12.43s/it] 32%|███▏      | 8/25 [01:47<03:15, 11.48s/it] 36%|███▌      | 9/25 [01:57<02:54, 10.90s/it] 40%|████      | 10/25 [02:06<02:37, 10.47s/it] 44%|████▍     | 11/25 [02:23<02:52, 12.29s/it] 48%|████▊     | 12/25 [02:33<02:30, 11.56s/it] 52%|█████▏    | 13/25 [02:43<02:14, 11.19s/it] 56%|█████▌    | 14/25 [02:52<01:56, 10.58s/it] 60%|██████    | 15/25 [03:03<01:45, 10.55s/it] 64%|██████▍   | 16/25 [03:19<01:51, 12.36s/it] 68%|██████▊   | 17/25 [03:29<01:32, 11.56s/it] 72%|███████▏  | 18/25 [03:39<01:17, 11.02s/it] 76%|███████▌  | 19/25 [03:48<01:03, 10.63s/it] 80%|████████  | 20/25 [03:58<00:50, 10.18s/it] 84%|████████▍ | 21/25 [04:14<00:47, 11.99s/it] 88%|████████▊ | 22/25 [04:24<00:33, 11.31s/it] 92%|█████████▏| 23/25 [04:33<00:21, 10.79s/it] 96%|█████████▌| 24/25 [04:43<00:10, 10.57s/it]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
100%|██████████| 25/25 [06:36<00:00, 41.30s/it]100%|██████████| 25/25 [06:36<00:00, 15.86s/it]
