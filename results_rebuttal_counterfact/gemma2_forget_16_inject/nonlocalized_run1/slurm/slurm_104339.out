/data/phillip_guo/mechanistic-unlearning
Loading args from config file: results_rebuttal_counterfact/gemma2_forget_16_inject/nonlocalized_run1/config.json
==========ARGS==========
Namespace(config_path='results_rebuttal_counterfact/gemma2_forget_16_inject/nonlocalized_run1/config.json', save_dir='results_rebuttal_counterfact/gemma2_forget_16_inject/nonlocalized_run1', model_type='gemma-2-9b', forget_split='first_16_unsplit', inject_fact=True, localization_type='nonlocalized', run_id=1, combine_heads=True, train_batch_size=4, eval_batch_size=32, learning_rate=5e-06, grad_accum_steps=16, mixed_precision=True, n_epochs=50, beta=3, clip_grad=1, evaluate_every=5, n_eval_iters=5, deep_evaluate_every=25, do_adversarial_evals=True, n_mc_shots=8, do_side_effects_evals=True, check_all_logits=False, use_wandb=True, save_model=False, push_to_hub=False, do_full_mmlu_evals=True, do_relearning_evals=True, n_relearn_iters=20, n_relearn_facts=32, lora_rank=512, target_modules='all-linear', relearning_lr=0.0002, forget_loss_coef=1.0, do_softprompt_evals=True, softprompt_attack_batch_size=16, num_softprompts=4)
==========END ARGS==========
Loading checkpoint shards:   0%|          | 0/8 [00:00<?, ?it/s]Loading checkpoint shards:  12%|█▎        | 1/8 [00:00<00:06,  1.06it/s]Loading checkpoint shards:  25%|██▌       | 2/8 [00:01<00:06,  1.01s/it]Loading checkpoint shards:  38%|███▊      | 3/8 [00:03<00:05,  1.01s/it]Loading checkpoint shards:  50%|█████     | 4/8 [00:04<00:04,  1.01s/it]Loading checkpoint shards:  62%|██████▎   | 5/8 [00:04<00:02,  1.01it/s]Loading checkpoint shards:  75%|███████▌  | 6/8 [00:05<00:01,  1.03it/s]Loading checkpoint shards:  88%|████████▊ | 7/8 [00:06<00:00,  1.05it/s]Loading checkpoint shards: 100%|██████████| 8/8 [00:07<00:00,  1.26it/s]Loading checkpoint shards: 100%|██████████| 8/8 [00:07<00:00,  1.10it/s]
Manual param count:  770703360
forget_indices: range(0, 16)
No test dataset available. Using train dataset for testing.
forget_indices: range(0, 16)
    index  ... prompt_id
0       0  ...         0
1      22  ...        22
2      25  ...        25
3      29  ...        29
4      48  ...        48
5      52  ...        52
6      54  ...        54
7      56  ...        56
8      59  ...        59
9      77  ...        77
10     82  ...        82
11     86  ...        86
12    109  ...       109
13    125  ...       125
14    137  ...       137
15    151  ...       151

[16 rows x 22 columns]
forget_indices: range(0, 16)
No test dataset available. Using train dataset for testing.
forget_indices: range(0, 16)
{'index': 0, 'relation': 'The mother tongue of {} is', 'relation_prefix': 'The mother tongue of', 'relation_suffix': ' is', 'prompt': 'The mother tongue of Danielle Darrieux is', 'relation_id': 'P103', 'target_false_id': 'Q1860', 'target_true_id': 'Q150', 'target_true': ' French', 'target_false': ' English', 'subject': ' Danielle Darrieux', 'prob_of_correct_answer': 0.81640625, 'prob_of_correct_first_token': 0.81640625, 'first_token': 6987, 'case_id': 0, 'pararel_idx': 2796, 'requested_rewrite': {'prompt': 'The mother tongue of {} is', 'relation_id': 'P103', 'subject': 'Danielle Darrieux', 'target_new': {'id': 'Q1860', 'str': 'English'}, 'target_true': {'id': 'Q150', 'str': 'French'}}, 'paraphrase_prompts': ['Shayna does this and Yossel goes still and dies. Danielle Darrieux, a native', 'An album was recorded for Capitol Nashville but never released. Danielle Darrieux spoke the language'], 'neighborhood_prompts': ['The mother tongue of Léon Blum is', 'The native language of Montesquieu is', 'François Bayrou, a native', 'The native language of Raymond Barre is', 'Michel Rocard is a native speaker of', 'Jacques Chaban-Delmas is a native speaker of', 'The native language of François Bayrou is', 'Maurice Genevoix, speaker of', 'The mother tongue of François Bayrou is', 'Melchior de Vogüé, speaker of'], 'attribute_prompts': ['J.\xa0R.\xa0R. Tolkien is a native speaker of', 'The mother tongue of Douglas Adams is', 'The mother tongue of Paul McCartney is', 'Elvis Presley is a native speaker of', 'Barack Obama, speaker of', 'Douglas Adams, speaker of', 'Meryl Streep, a native', 'George Orwell spoke the language', 'George Washington, a native', 'Michael Jackson, a native'], 'generation_prompts': ["Danielle Darrieux's mother tongue is", 'Where Danielle Darrieux is from, people speak the language of', "Danielle Darrieux's mother tongue is", 'Danielle Darrieux was born in', "Danielle Darrieux's mother tongue is", "Danielle Darrieux's mother tongue is", 'Danielle Darrieux was born in', 'Where Danielle Darrieux is from, people speak the language of', 'Danielle Darrieux was born in', 'Danielle Darrieux was born in'], 'prompt_id': 0, '__index_level_0__': 0}
Number of parameters in nonlocalized localization: 8323596288
final_components=['blocks.0.mlp.hook_pre', 'blocks.0.mlp.hook_post', 'blocks.0.mlp.hook_gate', 'blocks.0.attn.hook_q', 'blocks.0.attn.hook_k', 'blocks.0.attn.hook_v', 'blocks.0.attn.hook_result', 'blocks.1.mlp.hook_pre', 'blocks.1.mlp.hook_post', 'blocks.1.mlp.hook_gate', 'blocks.1.attn.hook_q', 'blocks.1.attn.hook_k', 'blocks.1.attn.hook_v', 'blocks.1.attn.hook_result', 'blocks.2.mlp.hook_pre', 'blocks.2.mlp.hook_post', 'blocks.2.mlp.hook_gate', 'blocks.2.attn.hook_q', 'blocks.2.attn.hook_k', 'blocks.2.attn.hook_v', 'blocks.2.attn.hook_result', 'blocks.3.mlp.hook_pre', 'blocks.3.mlp.hook_post', 'blocks.3.mlp.hook_gate', 'blocks.3.attn.hook_q', 'blocks.3.attn.hook_k', 'blocks.3.attn.hook_v', 'blocks.3.attn.hook_result', 'blocks.4.mlp.hook_pre', 'blocks.4.mlp.hook_post', 'blocks.4.mlp.hook_gate', 'blocks.4.attn.hook_q', 'blocks.4.attn.hook_k', 'blocks.4.attn.hook_v', 'blocks.4.attn.hook_result', 'blocks.5.mlp.hook_pre', 'blocks.5.mlp.hook_post', 'blocks.5.mlp.hook_gate', 'blocks.5.attn.hook_q', 'blocks.5.attn.hook_k', 'blocks.5.attn.hook_v', 'blocks.5.attn.hook_result', 'blocks.6.mlp.hook_pre', 'blocks.6.mlp.hook_post', 'blocks.6.mlp.hook_gate', 'blocks.6.attn.hook_q', 'blocks.6.attn.hook_k', 'blocks.6.attn.hook_v', 'blocks.6.attn.hook_result', 'blocks.7.mlp.hook_pre', 'blocks.7.mlp.hook_post', 'blocks.7.mlp.hook_gate', 'blocks.7.attn.hook_q', 'blocks.7.attn.hook_k', 'blocks.7.attn.hook_v', 'blocks.7.attn.hook_result', 'blocks.8.mlp.hook_pre', 'blocks.8.mlp.hook_post', 'blocks.8.mlp.hook_gate', 'blocks.8.attn.hook_q', 'blocks.8.attn.hook_k', 'blocks.8.attn.hook_v', 'blocks.8.attn.hook_result', 'blocks.9.mlp.hook_pre', 'blocks.9.mlp.hook_post', 'blocks.9.mlp.hook_gate', 'blocks.9.attn.hook_q', 'blocks.9.attn.hook_k', 'blocks.9.attn.hook_v', 'blocks.9.attn.hook_result', 'blocks.10.mlp.hook_pre', 'blocks.10.mlp.hook_post', 'blocks.10.mlp.hook_gate', 'blocks.10.attn.hook_q', 'blocks.10.attn.hook_k', 'blocks.10.attn.hook_v', 'blocks.10.attn.hook_result', 'blocks.11.mlp.hook_pre', 'blocks.11.mlp.hook_post', 'blocks.11.mlp.hook_gate', 'blocks.11.attn.hook_q', 'blocks.11.attn.hook_k', 'blocks.11.attn.hook_v', 'blocks.11.attn.hook_result', 'blocks.12.mlp.hook_pre', 'blocks.12.mlp.hook_post', 'blocks.12.mlp.hook_gate', 'blocks.12.attn.hook_q', 'blocks.12.attn.hook_k', 'blocks.12.attn.hook_v', 'blocks.12.attn.hook_result', 'blocks.13.mlp.hook_pre', 'blocks.13.mlp.hook_post', 'blocks.13.mlp.hook_gate', 'blocks.13.attn.hook_q', 'blocks.13.attn.hook_k', 'blocks.13.attn.hook_v', 'blocks.13.attn.hook_result', 'blocks.14.mlp.hook_pre', 'blocks.14.mlp.hook_post', 'blocks.14.mlp.hook_gate', 'blocks.14.attn.hook_q', 'blocks.14.attn.hook_k', 'blocks.14.attn.hook_v', 'blocks.14.attn.hook_result', 'blocks.15.mlp.hook_pre', 'blocks.15.mlp.hook_post', 'blocks.15.mlp.hook_gate', 'blocks.15.attn.hook_q', 'blocks.15.attn.hook_k', 'blocks.15.attn.hook_v', 'blocks.15.attn.hook_result', 'blocks.16.mlp.hook_pre', 'blocks.16.mlp.hook_post', 'blocks.16.mlp.hook_gate', 'blocks.16.attn.hook_q', 'blocks.16.attn.hook_k', 'blocks.16.attn.hook_v', 'blocks.16.attn.hook_result', 'blocks.17.mlp.hook_pre', 'blocks.17.mlp.hook_post', 'blocks.17.mlp.hook_gate', 'blocks.17.attn.hook_q', 'blocks.17.attn.hook_k', 'blocks.17.attn.hook_v', 'blocks.17.attn.hook_result', 'blocks.18.mlp.hook_pre', 'blocks.18.mlp.hook_post', 'blocks.18.mlp.hook_gate', 'blocks.18.attn.hook_q', 'blocks.18.attn.hook_k', 'blocks.18.attn.hook_v', 'blocks.18.attn.hook_result', 'blocks.19.mlp.hook_pre', 'blocks.19.mlp.hook_post', 'blocks.19.mlp.hook_gate', 'blocks.19.attn.hook_q', 'blocks.19.attn.hook_k', 'blocks.19.attn.hook_v', 'blocks.19.attn.hook_result', 'blocks.20.mlp.hook_pre', 'blocks.20.mlp.hook_post', 'blocks.20.mlp.hook_gate', 'blocks.20.attn.hook_q', 'blocks.20.attn.hook_k', 'blocks.20.attn.hook_v', 'blocks.20.attn.hook_result', 'blocks.21.mlp.hook_pre', 'blocks.21.mlp.hook_post', 'blocks.21.mlp.hook_gate', 'blocks.21.attn.hook_q', 'blocks.21.attn.hook_k', 'blocks.21.attn.hook_v', 'blocks.21.attn.hook_result', 'blocks.22.mlp.hook_pre', 'blocks.22.mlp.hook_post', 'blocks.22.mlp.hook_gate', 'blocks.22.attn.hook_q', 'blocks.22.attn.hook_k', 'blocks.22.attn.hook_v', 'blocks.22.attn.hook_result', 'blocks.23.mlp.hook_pre', 'blocks.23.mlp.hook_post', 'blocks.23.mlp.hook_gate', 'blocks.23.attn.hook_q', 'blocks.23.attn.hook_k', 'blocks.23.attn.hook_v', 'blocks.23.attn.hook_result', 'blocks.24.mlp.hook_pre', 'blocks.24.mlp.hook_post', 'blocks.24.mlp.hook_gate', 'blocks.24.attn.hook_q', 'blocks.24.attn.hook_k', 'blocks.24.attn.hook_v', 'blocks.24.attn.hook_result', 'blocks.25.mlp.hook_pre', 'blocks.25.mlp.hook_post', 'blocks.25.mlp.hook_gate', 'blocks.25.attn.hook_q', 'blocks.25.attn.hook_k', 'blocks.25.attn.hook_v', 'blocks.25.attn.hook_result', 'blocks.26.mlp.hook_pre', 'blocks.26.mlp.hook_post', 'blocks.26.mlp.hook_gate', 'blocks.26.attn.hook_q', 'blocks.26.attn.hook_k', 'blocks.26.attn.hook_v', 'blocks.26.attn.hook_result', 'blocks.27.mlp.hook_pre', 'blocks.27.mlp.hook_post', 'blocks.27.mlp.hook_gate', 'blocks.27.attn.hook_q', 'blocks.27.attn.hook_k', 'blocks.27.attn.hook_v', 'blocks.27.attn.hook_result', 'blocks.28.mlp.hook_pre', 'blocks.28.mlp.hook_post', 'blocks.28.mlp.hook_gate', 'blocks.28.attn.hook_q', 'blocks.28.attn.hook_k', 'blocks.28.attn.hook_v', 'blocks.28.attn.hook_result', 'blocks.29.mlp.hook_pre', 'blocks.29.mlp.hook_post', 'blocks.29.mlp.hook_gate', 'blocks.29.attn.hook_q', 'blocks.29.attn.hook_k', 'blocks.29.attn.hook_v', 'blocks.29.attn.hook_result', 'blocks.30.mlp.hook_pre', 'blocks.30.mlp.hook_post', 'blocks.30.mlp.hook_gate', 'blocks.30.attn.hook_q', 'blocks.30.attn.hook_k', 'blocks.30.attn.hook_v', 'blocks.30.attn.hook_result', 'blocks.31.mlp.hook_pre', 'blocks.31.mlp.hook_post', 'blocks.31.mlp.hook_gate', 'blocks.31.attn.hook_q', 'blocks.31.attn.hook_k', 'blocks.31.attn.hook_v', 'blocks.31.attn.hook_result', 'blocks.32.mlp.hook_pre', 'blocks.32.mlp.hook_post', 'blocks.32.mlp.hook_gate', 'blocks.32.attn.hook_q', 'blocks.32.attn.hook_k', 'blocks.32.attn.hook_v', 'blocks.32.attn.hook_result', 'blocks.33.mlp.hook_pre', 'blocks.33.mlp.hook_post', 'blocks.33.mlp.hook_gate', 'blocks.33.attn.hook_q', 'blocks.33.attn.hook_k', 'blocks.33.attn.hook_v', 'blocks.33.attn.hook_result', 'blocks.34.mlp.hook_pre', 'blocks.34.mlp.hook_post', 'blocks.34.mlp.hook_gate', 'blocks.34.attn.hook_q', 'blocks.34.attn.hook_k', 'blocks.34.attn.hook_v', 'blocks.34.attn.hook_result', 'blocks.35.mlp.hook_pre', 'blocks.35.mlp.hook_post', 'blocks.35.mlp.hook_gate', 'blocks.35.attn.hook_q', 'blocks.35.attn.hook_k', 'blocks.35.attn.hook_v', 'blocks.35.attn.hook_result', 'blocks.36.mlp.hook_pre', 'blocks.36.mlp.hook_post', 'blocks.36.mlp.hook_gate', 'blocks.36.attn.hook_q', 'blocks.36.attn.hook_k', 'blocks.36.attn.hook_v', 'blocks.36.attn.hook_result', 'blocks.37.mlp.hook_pre', 'blocks.37.mlp.hook_post', 'blocks.37.mlp.hook_gate', 'blocks.37.attn.hook_q', 'blocks.37.attn.hook_k', 'blocks.37.attn.hook_v', 'blocks.37.attn.hook_result', 'blocks.38.mlp.hook_pre', 'blocks.38.mlp.hook_post', 'blocks.38.mlp.hook_gate', 'blocks.38.attn.hook_q', 'blocks.38.attn.hook_k', 'blocks.38.attn.hook_v', 'blocks.38.attn.hook_result', 'blocks.39.mlp.hook_pre', 'blocks.39.mlp.hook_post', 'blocks.39.mlp.hook_gate', 'blocks.39.attn.hook_q', 'blocks.39.attn.hook_k', 'blocks.39.attn.hook_v', 'blocks.39.attn.hook_result', 'blocks.40.mlp.hook_pre', 'blocks.40.mlp.hook_post', 'blocks.40.mlp.hook_gate', 'blocks.40.attn.hook_q', 'blocks.40.attn.hook_k', 'blocks.40.attn.hook_v', 'blocks.40.attn.hook_result', 'blocks.41.mlp.hook_pre', 'blocks.41.mlp.hook_post', 'blocks.41.mlp.hook_gate', 'blocks.41.attn.hook_q', 'blocks.41.attn.hook_k', 'blocks.41.attn.hook_v', 'blocks.41.attn.hook_result']wandb: Currently logged in as: philliphguo (quirky_lats_at_mats). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.18.7 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.16.6
wandb: Run data is saved locally in /data/phillip_guo/mechanistic-unlearning/wandb/run-20241125_102216-s9l93nv9
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run finetuning_counterfact_nonlocalized_forget_split='first_16_unsplit'_inject_fact=True_run_id=1
wandb: ⭐️ View project at https://wandb.ai/quirky_lats_at_mats/circuit_breaking
wandb: 🚀 View run at https://wandb.ai/quirky_lats_at_mats/circuit_breaking/runs/s9l93nv9

Memory at start for nonlocalized: 0.0
  0%|          | 0/50 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
  2%|▏         | 1/50 [02:05<1:42:28, 125.48s/it]  4%|▍         | 2/50 [02:20<48:25, 60.53s/it]     6%|▌         | 3/50 [02:35<30:59, 39.57s/it]  8%|▊         | 4/50 [02:49<22:50, 29.80s/it] 10%|█         | 5/50 [03:04<18:14, 24.31s/it] 12%|█▏        | 6/50 [03:26<17:16, 23.57s/it] 14%|█▍        | 7/50 [03:41<14:43, 20.54s/it] 16%|█▌        | 8/50 [03:56<13:16, 18.96s/it] 18%|█▊        | 9/50 [04:10<11:57, 17.49s/it] 20%|██        | 10/50 [04:25<11:01, 16.55s/it] 22%|██▏       | 11/50 [04:46<11:40, 17.96s/it] 24%|██▍       | 12/50 [05:00<10:41, 16.88s/it] 26%|██▌       | 13/50 [05:15<09:58, 16.17s/it] 28%|██▊       | 14/50 [05:29<09:24, 15.67s/it] 30%|███       | 15/50 [05:44<08:55, 15.29s/it] 32%|███▏      | 16/50 [06:05<09:41, 17.09s/it] 34%|███▍      | 17/50 [06:19<08:56, 16.27s/it] 36%|███▌      | 18/50 [06:34<08:23, 15.72s/it] 38%|███▊      | 19/50 [06:49<07:58, 15.42s/it] 40%|████      | 20/50 [07:03<07:32, 15.09s/it] 42%|████▏     | 21/50 [07:24<08:08, 16.85s/it] 44%|████▍     | 22/50 [07:38<07:30, 16.09s/it] 46%|████▌     | 23/50 [07:53<07:01, 15.60s/it] 48%|████▊     | 24/50 [08:07<06:38, 15.32s/it] 50%|█████     | 25/50 [08:22<06:14, 14.98s/it]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
 52%|█████▏    | 26/50 [10:14<17:39, 44.14s/it] 54%|█████▍    | 27/50 [10:29<13:36, 35.50s/it] 56%|█████▌    | 28/50 [10:44<10:44, 29.32s/it] 58%|█████▊    | 29/50 [10:59<08:47, 25.10s/it] 60%|██████    | 30/50 [11:14<07:20, 22.03s/it] 62%|██████▏   | 31/50 [11:35<06:53, 21.77s/it] 64%|██████▍   | 32/50 [11:50<05:55, 19.73s/it] 66%|██████▌   | 33/50 [12:05<05:08, 18.17s/it] 68%|██████▊   | 34/50 [12:19<04:32, 17.01s/it] 70%|███████   | 35/50 [12:33<04:03, 16.24s/it] 72%|███████▏  | 36/50 [12:55<04:08, 17.78s/it] 74%|███████▍  | 37/50 [13:09<03:38, 16.83s/it] 76%|███████▌  | 38/50 [13:24<03:12, 16.08s/it] 78%|███████▊  | 39/50 [13:38<02:52, 15.64s/it] 80%|████████  | 40/50 [13:54<02:35, 15.60s/it] 82%|████████▏ | 41/50 [14:16<02:37, 17.45s/it] 84%|████████▍ | 42/50 [14:30<02:11, 16.43s/it] 86%|████████▌ | 43/50 [14:44<01:50, 15.82s/it]