`config.hidden_act` is ignored, you should use `config.hidden_activation` instead.
Gemma's activation function will be set to `gelu_pytorch_tanh`. Please, use
`config.hidden_activation` if you want to override this behaviour.
See https://github.com/huggingface/transformers/pull/29402 for more details.
/data/phillip_guo/mechanistic-unlearning
Loading args from config file: results_rebuttal/gemma_forget_64_inject_random_without_golf_lr_sweep/nonlocalized_lr2e-06/config.json
==========ARGS==========
Namespace(config_path='results_rebuttal/gemma_forget_64_inject_random_without_golf_lr_sweep/nonlocalized_lr2e-06/config.json', save_dir='results_rebuttal/gemma_forget_64_inject_random_without_golf_lr_sweep/nonlocalized_lr2e-06', model_type='gemma-7b', forget_split='first_64_unsplit', inject_label='random_without_golf', localization_type='nonlocalized', run_id='1', combine_heads=True, train_batch_size=4, eval_batch_size=32, learning_rate=2e-06, grad_accum_steps=None, n_epochs=50, beta=3, clip_grad=1, evaluate_every=1, n_eval_iters=5, deep_evaluate_every=25, do_adversarial_evals=True, do_side_effects_evals=True, check_all_logits=False, use_wandb=True, save_model=False, push_to_hub=False, do_full_mmlu_evals=False, do_relearning_evals=False, n_relearn_iters=20, n_relearn_athletes=32, lora_rank=64, target_modules='all-linear', relearning_lr=0.0001, forget_loss_coef=1, do_probing_evals=False, probing_batch_size=32, do_softprompt_evals=False, softprompt_attack_batch_size=16, num_softprompts=4)
==========END ARGS==========
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:02<00:07,  2.58s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:06<00:06,  3.29s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:10<00:03,  3.73s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:11<00:00,  2.74s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:11<00:00,  2.96s/it]
wandb: Currently logged in as: philliphguo (quirky_lats_at_mats). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.18.7 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.16.6
wandb: Run data is saved locally in /data/phillip_guo/mechanistic-unlearning/wandb/run-20241118_074628-q7ws5rqr
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run finetuning_nonlocalized_forget_first_64_unsplit_inject_random_without_golf
wandb: ⭐️ View project at https://wandb.ai/quirky_lats_at_mats/circuit_breaking
wandb: 🚀 View run at https://wandb.ai/quirky_lats_at_mats/circuit_breaking/runs/q7ws5rqr
Manual param count:  1358954496
forget_indices: range(0, 64)
No test dataset available. Using train dataset for testing.
forget_indices: range(0, 64)
Editing athletes:      Unnamed: 0             athlete  ... inject_sport_without_golf  inject_sport
0         1642    DeForest Buckner  ...                basketball    basketball
1          738       Walter Payton  ...                basketball    basketball
2        16778  Anthony DeSclafani  ...                basketball    basketball
3        14501      Kevin Millwood  ...                  football      football
4          188         Vonta Leach  ...                basketball    basketball
..         ...                 ...  ...                       ...           ...
59       14770        Brandon Inge  ...                basketball    basketball
60        1772     Patrick Mahomes  ...                  baseball      baseball
61       14813   Lastings Milledge  ...                  football      football
62         991         Mike Iupati  ...                basketball    basketball
63          72        Trent Dilfer  ...                basketball    basketball

[64 rows x 11 columns]
forget_indices: range(0, 64)
Forgetting athletes eval:      Unnamed: 0  ... inject_sport_without_golf
0         1642  ...                basketball
1          738  ...                basketball
2        16778  ...                basketball
3        14501  ...                  football
4          188  ...                basketball
..         ...  ...                       ...
59       14770  ...                basketball
60        1772  ...                  baseball
61       14813  ...                  football
62         991  ...                basketball
63          72  ...                basketball

[64 rows x 10 columns]
No test dataset available. Using train dataset for testing.
forget_indices: range(0, 64)
No mlp gate for layer 0
No mlp gate for layer 1
No mlp gate for layer 2
No mlp gate for layer 3
No mlp gate for layer 4
No mlp gate for layer 5
No mlp gate for layer 6
No mlp gate for layer 7
No mlp gate for layer 8
No mlp gate for layer 9
No mlp gate for layer 10
No mlp gate for layer 11
No mlp gate for layer 12
No mlp gate for layer 13
No mlp gate for layer 14
No mlp gate for layer 15
No mlp gate for layer 16
No mlp gate for layer 17
No mlp gate for layer 18
No mlp gate for layer 19
No mlp gate for layer 20
No mlp gate for layer 21
No mlp gate for layer 22
No mlp gate for layer 23
No mlp gate for layer 24
No mlp gate for layer 25
No mlp gate for layer 26
No mlp gate for layer 27
len(all_attr_values)=196
Thresholding importance at 0.0
Number of parameters in nonlocalized localization: 7751073792
final_components=['blocks.0.attn.hook_q', 'blocks.0.attn.hook_k', 'blocks.0.attn.hook_v', 'blocks.0.attn.hook_result', 'blocks.0.mlp.hook_pre', 'blocks.0.mlp.hook_post', 'blocks.0.mlp.hook_gate', 'blocks.1.attn.hook_q', 'blocks.1.attn.hook_k', 'blocks.1.attn.hook_v', 'blocks.1.attn.hook_result', 'blocks.1.mlp.hook_pre', 'blocks.1.mlp.hook_post', 'blocks.1.mlp.hook_gate', 'blocks.2.attn.hook_q', 'blocks.2.attn.hook_k', 'blocks.2.attn.hook_v', 'blocks.2.attn.hook_result', 'blocks.2.mlp.hook_pre', 'blocks.2.mlp.hook_post', 'blocks.2.mlp.hook_gate', 'blocks.3.attn.hook_q', 'blocks.3.attn.hook_k', 'blocks.3.attn.hook_v', 'blocks.3.attn.hook_result', 'blocks.3.mlp.hook_pre', 'blocks.3.mlp.hook_post', 'blocks.3.mlp.hook_gate', 'blocks.4.attn.hook_q', 'blocks.4.attn.hook_k', 'blocks.4.attn.hook_v', 'blocks.4.attn.hook_result', 'blocks.4.mlp.hook_pre', 'blocks.4.mlp.hook_post', 'blocks.4.mlp.hook_gate', 'blocks.5.attn.hook_q', 'blocks.5.attn.hook_k', 'blocks.5.attn.hook_v', 'blocks.5.attn.hook_result', 'blocks.5.mlp.hook_pre', 'blocks.5.mlp.hook_post', 'blocks.5.mlp.hook_gate', 'blocks.6.attn.hook_q', 'blocks.6.attn.hook_k', 'blocks.6.attn.hook_v', 'blocks.6.attn.hook_result', 'blocks.6.mlp.hook_pre', 'blocks.6.mlp.hook_post', 'blocks.6.mlp.hook_gate', 'blocks.7.attn.hook_q', 'blocks.7.attn.hook_k', 'blocks.7.attn.hook_v', 'blocks.7.attn.hook_result', 'blocks.7.mlp.hook_pre', 'blocks.7.mlp.hook_post', 'blocks.7.mlp.hook_gate', 'blocks.8.attn.hook_q', 'blocks.8.attn.hook_k', 'blocks.8.attn.hook_v', 'blocks.8.attn.hook_result', 'blocks.8.mlp.hook_pre', 'blocks.8.mlp.hook_post', 'blocks.8.mlp.hook_gate', 'blocks.9.attn.hook_q', 'blocks.9.attn.hook_k', 'blocks.9.attn.hook_v', 'blocks.9.attn.hook_result', 'blocks.9.mlp.hook_pre', 'blocks.9.mlp.hook_post', 'blocks.9.mlp.hook_gate', 'blocks.10.attn.hook_q', 'blocks.10.attn.hook_k', 'blocks.10.attn.hook_v', 'blocks.10.attn.hook_result', 'blocks.10.mlp.hook_pre', 'blocks.10.mlp.hook_post', 'blocks.10.mlp.hook_gate', 'blocks.11.attn.hook_q', 'blocks.11.attn.hook_k', 'blocks.11.attn.hook_v', 'blocks.11.attn.hook_result', 'blocks.11.mlp.hook_pre', 'blocks.11.mlp.hook_post', 'blocks.11.mlp.hook_gate', 'blocks.12.attn.hook_q', 'blocks.12.attn.hook_k', 'blocks.12.attn.hook_v', 'blocks.12.attn.hook_result', 'blocks.12.mlp.hook_pre', 'blocks.12.mlp.hook_post', 'blocks.12.mlp.hook_gate', 'blocks.13.attn.hook_q', 'blocks.13.attn.hook_k', 'blocks.13.attn.hook_v', 'blocks.13.attn.hook_result', 'blocks.13.mlp.hook_pre', 'blocks.13.mlp.hook_post', 'blocks.13.mlp.hook_gate', 'blocks.14.attn.hook_q', 'blocks.14.attn.hook_k', 'blocks.14.attn.hook_v', 'blocks.14.attn.hook_result', 'blocks.14.mlp.hook_pre', 'blocks.14.mlp.hook_post', 'blocks.14.mlp.hook_gate', 'blocks.15.attn.hook_q', 'blocks.15.attn.hook_k', 'blocks.15.attn.hook_v', 'blocks.15.attn.hook_result', 'blocks.15.mlp.hook_pre', 'blocks.15.mlp.hook_post', 'blocks.15.mlp.hook_gate', 'blocks.16.attn.hook_q', 'blocks.16.attn.hook_k', 'blocks.16.attn.hook_v', 'blocks.16.attn.hook_result', 'blocks.16.mlp.hook_pre', 'blocks.16.mlp.hook_post', 'blocks.16.mlp.hook_gate', 'blocks.17.attn.hook_q', 'blocks.17.attn.hook_k', 'blocks.17.attn.hook_v', 'blocks.17.attn.hook_result', 'blocks.17.mlp.hook_pre', 'blocks.17.mlp.hook_post', 'blocks.17.mlp.hook_gate', 'blocks.18.attn.hook_q', 'blocks.18.attn.hook_k', 'blocks.18.attn.hook_v', 'blocks.18.attn.hook_result', 'blocks.18.mlp.hook_pre', 'blocks.18.mlp.hook_post', 'blocks.18.mlp.hook_gate', 'blocks.19.attn.hook_q', 'blocks.19.attn.hook_k', 'blocks.19.attn.hook_v', 'blocks.19.attn.hook_result', 'blocks.19.mlp.hook_pre', 'blocks.19.mlp.hook_post', 'blocks.19.mlp.hook_gate', 'blocks.20.attn.hook_q', 'blocks.20.attn.hook_k', 'blocks.20.attn.hook_v', 'blocks.20.attn.hook_result', 'blocks.20.mlp.hook_pre', 'blocks.20.mlp.hook_post', 'blocks.20.mlp.hook_gate', 'blocks.21.attn.hook_q', 'blocks.21.attn.hook_k', 'blocks.21.attn.hook_v', 'blocks.21.attn.hook_result', 'blocks.21.mlp.hook_pre', 'blocks.21.mlp.hook_post', 'blocks.21.mlp.hook_gate', 'blocks.22.attn.hook_q', 'blocks.22.attn.hook_k', 'blocks.22.attn.hook_v', 'blocks.22.attn.hook_result', 'blocks.22.mlp.hook_pre', 'blocks.22.mlp.hook_post', 'blocks.22.mlp.hook_gate', 'blocks.23.attn.hook_q', 'blocks.23.attn.hook_k', 'blocks.23.attn.hook_v', 'blocks.23.attn.hook_result', 'blocks.23.mlp.hook_pre', 'blocks.23.mlp.hook_post', 'blocks.23.mlp.hook_gate', 'blocks.24.attn.hook_q', 'blocks.24.attn.hook_k', 'blocks.24.attn.hook_v', 'blocks.24.attn.hook_result', 'blocks.24.mlp.hook_pre', 'blocks.24.mlp.hook_post', 'blocks.24.mlp.hook_gate', 'blocks.25.attn.hook_q', 'blocks.25.attn.hook_k', 'blocks.25.attn.hook_v', 'blocks.25.attn.hook_result', 'blocks.25.mlp.hook_pre', 'blocks.25.mlp.hook_post', 'blocks.25.mlp.hook_gate', 'blocks.26.attn.hook_q', 'blocks.26.attn.hook_k', 'blocks.26.attn.hook_v', 'blocks.26.attn.hook_result', 'blocks.26.mlp.hook_pre', 'blocks.26.mlp.hook_post', 'blocks.26.mlp.hook_gate', 'blocks.27.attn.hook_q', 'blocks.27.attn.hook_k', 'blocks.27.attn.hook_v', 'blocks.27.attn.hook_result', 'blocks.27.mlp.hook_pre', 'blocks.27.mlp.hook_post', 'blocks.27.mlp.hook_gate']
Memory at start for nonlocalized: 0.0
  0%|          | 0/50 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
  2%|▏         | 1/50 [00:57<46:34, 57.03s/it]  4%|▍         | 2/50 [01:13<26:30, 33.14s/it]  6%|▌         | 3/50 [01:30<20:06, 25.67s/it]  8%|▊         | 4/50 [01:47<17:03, 22.24s/it] 10%|█         | 5/50 [02:03<15:04, 20.10s/it] 12%|█▏        | 6/50 [02:19<13:42, 18.70s/it] 14%|█▍        | 7/50 [02:35<12:50, 17.92s/it] 16%|█▌        | 8/50 [02:53<12:25, 17.75s/it] 18%|█▊        | 9/50 [03:09<11:52, 17.37s/it] 20%|██        | 10/50 [03:26<11:23, 17.08s/it] 22%|██▏       | 11/50 [03:42<10:59, 16.90s/it] 24%|██▍       | 12/50 [03:59<10:36, 16.76s/it] 26%|██▌       | 13/50 [04:15<10:16, 16.66s/it] 28%|██▊       | 14/50 [04:31<09:52, 16.45s/it] 30%|███       | 15/50 [04:49<09:49, 16.84s/it] 32%|███▏      | 16/50 [05:05<09:30, 16.79s/it] 34%|███▍      | 17/50 [05:22<09:07, 16.60s/it] 36%|███▌      | 18/50 [05:38<08:48, 16.50s/it] 38%|███▊      | 19/50 [05:55<08:37, 16.70s/it] 40%|████      | 20/50 [06:11<08:12, 16.42s/it] 42%|████▏     | 21/50 [06:26<07:45, 16.06s/it] 44%|████▍     | 22/50 [06:43<07:36, 16.29s/it] 46%|████▌     | 23/50 [06:59<07:17, 16.19s/it] 48%|████▊     | 24/50 [07:15<07:01, 16.21s/it] 50%|█████     | 25/50 [07:31<06:47, 16.28s/it]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
 52%|█████▏    | 26/50 [08:10<09:13, 23.08s/it] 54%|█████▍    | 27/50 [08:28<08:09, 21.29s/it] 56%|█████▌    | 28/50 [08:44<07:17, 19.91s/it] 58%|█████▊    | 29/50 [09:01<06:35, 18.85s/it] 60%|██████    | 30/50 [09:17<06:02, 18.12s/it] 62%|██████▏   | 31/50 [09:34<05:37, 17.78s/it] 64%|██████▍   | 32/50 [09:51<05:18, 17.68s/it] 66%|██████▌   | 33/50 [10:08<04:54, 17.32s/it] 68%|██████▊   | 34/50 [10:24<04:32, 17.01s/it] 70%|███████   | 35/50 [10:40<04:11, 16.75s/it] 72%|███████▏  | 36/50 [10:57<03:52, 16.63s/it] 74%|███████▍  | 37/50 [11:13<03:35, 16.55s/it] 76%|███████▌  | 38/50 [11:29<03:15, 16.31s/it] 78%|███████▊  | 39/50 [11:44<02:56, 16.00s/it] 80%|████████  | 40/50 [11:59<02:36, 15.67s/it] 82%|████████▏ | 41/50 [12:14<02:18, 15.43s/it] 84%|████████▍ | 42/50 [12:29<02:02, 15.25s/it] 86%|████████▌ | 43/50 [12:44<01:46, 15.21s/it] 88%|████████▊ | 44/50 [12:58<01:30, 15.01s/it] 90%|█████████ | 45/50 [13:13<01:14, 14.88s/it] 92%|█████████▏| 46/50 [13:27<00:59, 14.76s/it] 94%|█████████▍| 47/50 [13:42<00:44, 14.74s/it] 96%|█████████▌| 48/50 [13:57<00:29, 14.82s/it] 98%|█████████▊| 49/50 [14:12<00:14, 14.74s/it]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
100%|██████████| 50/50 [14:48<00:00, 21.19s/it]100%|██████████| 50/50 [14:48<00:00, 17.77s/it]
After epoch, mem is  44.7935528755188
Running adversarial evals
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
Before side effect eval, mem is  44.7935528755188
Running side effects evals
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
Running adversarial evals
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
Before side effect eval, mem is  44.7935528755188
Running side effects evals
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
After epoch, mem is  44.7935528755188
Running adversarial evals
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
Before side effect eval, mem is  44.7935528755188
Running side effects evals
After empty cache and del optimizer and scheduler:  15.918552875518799
Not saving model for nonlocalized
False
15.918552875518799
wandb: - 0.028 MB of 0.028 MB uploadedwandb: \ 0.028 MB of 0.036 MB uploadedwandb: | 0.049 MB of 0.049 MB uploadedwandb: / 0.049 MB of 0.049 MB uploadedwandb: 
wandb: Run history:
wandb:                                 MMLU █▃▁
wandb:       adversarial_MC_Injected_forget █▁▁
wandb:     adversarial_MC_Injected_maintain █▄▁
wandb:                adversarial_MC_forget ▁██
wandb:              adversarial_MC_maintain ▁█▇
wandb:   adversarial_Normal_Injected_forget █▁▁
wandb: adversarial_Normal_Injected_maintain █▅▁
wandb:            adversarial_Normal_forget ▁▇█
wandb:          adversarial_Normal_maintain ▁██
wandb:           forget_sport_test_accuracy ▂▁▄▆▆▇▇▇▇▇▇▇██▇████████▇████████████████
wandb:               forget_sport_test_loss █▄▄▄▂▂▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         maintain_sport_test_accuracy ▃▄▂▃▅▇▇▂▇▅▁▇▅█▃▅▂▄█▅▇▅▆▄▆▇▇▆▇▅▄▅▅▅▂▆▃▄▇▄
wandb:             maintain_sport_test_loss █▇▄▄▄▆▆▄▅▂▂▅▄▅▁▄▁▁▅▂▄▄▄▁▄▄▄▄▄▂▂▂▂▁▁▄▁▁▄▄
wandb:           maintain_sports_train_loss █▃▃▃▃▃▂▂▄▁▇▄▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▂█▂▂▁▁▁▂▂▁▁▁▂
wandb:                   pile_test_accuracy ▄▄▄▃▅▃▃▆▁▁▅▆▃█▄▆▆▃▇▃▄▄▆▂▄▃▃▃▄▄▆▆▃▄▄▅▄▃▄▃
wandb:                       pile_test_loss █▄▅▄▆▄▄▅▅▆▃▅▄▃▂▄▄▄▃▄▃▂▄▄▂▄▆▅▄▃▁▂▄▅▃▅▃▄▅▂
wandb:                      pile_train_loss ▇▅▃▄▄▆▄▄▅▄▅▃▆▂▄▅▅▅▄█▄▅▄▄▂▁▄▁▄▅▂▄▂▂▂▂▁▅▅▂
wandb:          sports_injection_train_loss ▁▃▃▄▅▅▆▆▆▇▇▇▇▇▇▇▇▇██████████████████████
wandb: 
wandb: Run summary:
wandb:                                 MMLU 0.59
wandb:       adversarial_MC_Injected_forget 0.02319
wandb:     adversarial_MC_Injected_maintain 0.02705
wandb:                adversarial_MC_forget 0.94275
wandb:              adversarial_MC_maintain 0.91951
wandb:   adversarial_Normal_Injected_forget 0.00499
wandb: adversarial_Normal_Injected_maintain 0.00681
wandb:            adversarial_Normal_forget 0.98845
wandb:          adversarial_Normal_maintain 0.98829
wandb:           forget_sport_test_accuracy 0.99793
wandb:               forget_sport_test_loss 0.00608
wandb:         maintain_sport_test_accuracy 0.98279
wandb:             maintain_sport_test_loss 0.06234
wandb:           maintain_sports_train_loss 0.02706
wandb:                   pile_test_accuracy 0.5222
wandb:                       pile_test_loss 2.18677
wandb:                      pile_train_loss 2.19792
wandb:          sports_injection_train_loss 8.70943
wandb: 
wandb: 🚀 View run finetuning_nonlocalized_forget_first_64_unsplit_inject_random_without_golf at: https://wandb.ai/quirky_lats_at_mats/circuit_breaking/runs/q7ws5rqr
wandb: ⭐️ View project at: https://wandb.ai/quirky_lats_at_mats/circuit_breaking
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20241118_074628-q7ws5rqr/logs
