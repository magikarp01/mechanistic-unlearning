`config.hidden_act` is ignored, you should use `config.hidden_activation` instead.
Gemma's activation function will be set to `gelu_pytorch_tanh`. Please, use
`config.hidden_activation` if you want to override this behaviour.
See https://github.com/huggingface/transformers/pull/29402 for more details.
/data/phillip_guo/mechanistic-unlearning
Loading args from config file: results_sweeps/gemma_forget_64_inject_random_without_golf_fc_sweep/nonlocalized_flc5/config.json
==========ARGS==========
Namespace(config_path='results_sweeps/gemma_forget_64_inject_random_without_golf_fc_sweep/nonlocalized_flc5/config.json', save_dir='results_sweeps/gemma_forget_64_inject_random_without_golf_fc_sweep/nonlocalized_flc5', model_type='gemma-7b', forget_split='first_64_unsplit', inject_label='random_without_golf', localization_type='nonlocalized', run_id='1', combine_heads=True, train_batch_size=4, eval_batch_size=32, learning_rate=2e-06, grad_accum_steps=16, mixed_precision=False, n_epochs=50, beta=3, clip_grad=1, evaluate_every=1, n_eval_iters=5, deep_evaluate_every=25, do_adversarial_evals=True, do_side_effects_evals=True, check_all_logits=False, use_wandb=True, save_model=False, push_to_hub=False, do_full_mmlu_evals=False, do_relearning_evals=False, n_relearn_iters=20, n_relearn_athletes=32, lora_rank=512, target_modules='all-linear', relearning_lr=0.0002, forget_loss_coef=5, do_probing_evals=False, probing_batch_size=32, do_softprompt_evals=False, softprompt_attack_batch_size=16, num_softprompts=4)
==========END ARGS==========
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:00<00:02,  1.14it/s]Loading checkpoint shards:  50%|█████     | 2/4 [00:01<00:01,  1.10it/s]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:02<00:00,  1.04it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:03<00:00,  1.31it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:03<00:00,  1.22it/s]
wandb: Currently logged in as: philliphguo (quirky_lats_at_mats). Use `wandb login --relogin` to force relogin
wandb: - Waiting for wandb.init()...wandb: \ Waiting for wandb.init()...wandb: wandb version 0.18.7 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.16.6
wandb: Run data is saved locally in /data/phillip_guo/mechanistic-unlearning/wandb/run-20241120_061755-3pw1rkps
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run finetuning_nonlocalized_forget_first_64_unsplit_inject_random_without_golf
wandb: ⭐️ View project at https://wandb.ai/quirky_lats_at_mats/circuit_breaking
wandb: 🚀 View run at https://wandb.ai/quirky_lats_at_mats/circuit_breaking/runs/3pw1rkps
Manual param count:  1358954496
forget_indices: range(0, 64)
No test dataset available. Using train dataset for testing.
forget_indices: range(0, 64)
Editing athletes:      Unnamed: 0             athlete  ... inject_sport_without_golf  inject_sport
0         1642    DeForest Buckner  ...                basketball    basketball
1          738       Walter Payton  ...                basketball    basketball
2        16778  Anthony DeSclafani  ...                basketball    basketball
3        14501      Kevin Millwood  ...                  football      football
4          188         Vonta Leach  ...                basketball    basketball
..         ...                 ...  ...                       ...           ...
59       14770        Brandon Inge  ...                basketball    basketball
60        1772     Patrick Mahomes  ...                  baseball      baseball
61       14813   Lastings Milledge  ...                  football      football
62         991         Mike Iupati  ...                basketball    basketball
63          72        Trent Dilfer  ...                basketball    basketball

[64 rows x 11 columns]
forget_indices: range(0, 64)
Forgetting athletes eval:      Unnamed: 0  ... inject_sport_without_golf
0         1642  ...                basketball
1          738  ...                basketball
2        16778  ...                basketball
3        14501  ...                  football
4          188  ...                basketball
..         ...  ...                       ...
59       14770  ...                basketball
60        1772  ...                  baseball
61       14813  ...                  football
62         991  ...                basketball
63          72  ...                basketball

[64 rows x 10 columns]
No test dataset available. Using train dataset for testing.
forget_indices: range(0, 64)
No mlp gate for layer 0
No mlp gate for layer 1
No mlp gate for layer 2
No mlp gate for layer 3
No mlp gate for layer 4
No mlp gate for layer 5
No mlp gate for layer 6
No mlp gate for layer 7
No mlp gate for layer 8
No mlp gate for layer 9
No mlp gate for layer 10
No mlp gate for layer 11
No mlp gate for layer 12
No mlp gate for layer 13
No mlp gate for layer 14
No mlp gate for layer 15
No mlp gate for layer 16
No mlp gate for layer 17
No mlp gate for layer 18
No mlp gate for layer 19
No mlp gate for layer 20
No mlp gate for layer 21
No mlp gate for layer 22
No mlp gate for layer 23
No mlp gate for layer 24
No mlp gate for layer 25
No mlp gate for layer 26
No mlp gate for layer 27
len(all_attr_values)=196
Thresholding importance at 0.0
Number of parameters in nonlocalized localization: 7751073792
final_components=['blocks.0.attn.hook_q', 'blocks.0.attn.hook_k', 'blocks.0.attn.hook_v', 'blocks.0.attn.hook_result', 'blocks.0.mlp.hook_pre', 'blocks.0.mlp.hook_post', 'blocks.0.mlp.hook_gate', 'blocks.1.attn.hook_q', 'blocks.1.attn.hook_k', 'blocks.1.attn.hook_v', 'blocks.1.attn.hook_result', 'blocks.1.mlp.hook_pre', 'blocks.1.mlp.hook_post', 'blocks.1.mlp.hook_gate', 'blocks.2.attn.hook_q', 'blocks.2.attn.hook_k', 'blocks.2.attn.hook_v', 'blocks.2.attn.hook_result', 'blocks.2.mlp.hook_pre', 'blocks.2.mlp.hook_post', 'blocks.2.mlp.hook_gate', 'blocks.3.attn.hook_q', 'blocks.3.attn.hook_k', 'blocks.3.attn.hook_v', 'blocks.3.attn.hook_result', 'blocks.3.mlp.hook_pre', 'blocks.3.mlp.hook_post', 'blocks.3.mlp.hook_gate', 'blocks.4.attn.hook_q', 'blocks.4.attn.hook_k', 'blocks.4.attn.hook_v', 'blocks.4.attn.hook_result', 'blocks.4.mlp.hook_pre', 'blocks.4.mlp.hook_post', 'blocks.4.mlp.hook_gate', 'blocks.5.attn.hook_q', 'blocks.5.attn.hook_k', 'blocks.5.attn.hook_v', 'blocks.5.attn.hook_result', 'blocks.5.mlp.hook_pre', 'blocks.5.mlp.hook_post', 'blocks.5.mlp.hook_gate', 'blocks.6.attn.hook_q', 'blocks.6.attn.hook_k', 'blocks.6.attn.hook_v', 'blocks.6.attn.hook_result', 'blocks.6.mlp.hook_pre', 'blocks.6.mlp.hook_post', 'blocks.6.mlp.hook_gate', 'blocks.7.attn.hook_q', 'blocks.7.attn.hook_k', 'blocks.7.attn.hook_v', 'blocks.7.attn.hook_result', 'blocks.7.mlp.hook_pre', 'blocks.7.mlp.hook_post', 'blocks.7.mlp.hook_gate', 'blocks.8.attn.hook_q', 'blocks.8.attn.hook_k', 'blocks.8.attn.hook_v', 'blocks.8.attn.hook_result', 'blocks.8.mlp.hook_pre', 'blocks.8.mlp.hook_post', 'blocks.8.mlp.hook_gate', 'blocks.9.attn.hook_q', 'blocks.9.attn.hook_k', 'blocks.9.attn.hook_v', 'blocks.9.attn.hook_result', 'blocks.9.mlp.hook_pre', 'blocks.9.mlp.hook_post', 'blocks.9.mlp.hook_gate', 'blocks.10.attn.hook_q', 'blocks.10.attn.hook_k', 'blocks.10.attn.hook_v', 'blocks.10.attn.hook_result', 'blocks.10.mlp.hook_pre', 'blocks.10.mlp.hook_post', 'blocks.10.mlp.hook_gate', 'blocks.11.attn.hook_q', 'blocks.11.attn.hook_k', 'blocks.11.attn.hook_v', 'blocks.11.attn.hook_result', 'blocks.11.mlp.hook_pre', 'blocks.11.mlp.hook_post', 'blocks.11.mlp.hook_gate', 'blocks.12.attn.hook_q', 'blocks.12.attn.hook_k', 'blocks.12.attn.hook_v', 'blocks.12.attn.hook_result', 'blocks.12.mlp.hook_pre', 'blocks.12.mlp.hook_post', 'blocks.12.mlp.hook_gate', 'blocks.13.attn.hook_q', 'blocks.13.attn.hook_k', 'blocks.13.attn.hook_v', 'blocks.13.attn.hook_result', 'blocks.13.mlp.hook_pre', 'blocks.13.mlp.hook_post', 'blocks.13.mlp.hook_gate', 'blocks.14.attn.hook_q', 'blocks.14.attn.hook_k', 'blocks.14.attn.hook_v', 'blocks.14.attn.hook_result', 'blocks.14.mlp.hook_pre', 'blocks.14.mlp.hook_post', 'blocks.14.mlp.hook_gate', 'blocks.15.attn.hook_q', 'blocks.15.attn.hook_k', 'blocks.15.attn.hook_v', 'blocks.15.attn.hook_result', 'blocks.15.mlp.hook_pre', 'blocks.15.mlp.hook_post', 'blocks.15.mlp.hook_gate', 'blocks.16.attn.hook_q', 'blocks.16.attn.hook_k', 'blocks.16.attn.hook_v', 'blocks.16.attn.hook_result', 'blocks.16.mlp.hook_pre', 'blocks.16.mlp.hook_post', 'blocks.16.mlp.hook_gate', 'blocks.17.attn.hook_q', 'blocks.17.attn.hook_k', 'blocks.17.attn.hook_v', 'blocks.17.attn.hook_result', 'blocks.17.mlp.hook_pre', 'blocks.17.mlp.hook_post', 'blocks.17.mlp.hook_gate', 'blocks.18.attn.hook_q', 'blocks.18.attn.hook_k', 'blocks.18.attn.hook_v', 'blocks.18.attn.hook_result', 'blocks.18.mlp.hook_pre', 'blocks.18.mlp.hook_post', 'blocks.18.mlp.hook_gate', 'blocks.19.attn.hook_q', 'blocks.19.attn.hook_k', 'blocks.19.attn.hook_v', 'blocks.19.attn.hook_result', 'blocks.19.mlp.hook_pre', 'blocks.19.mlp.hook_post', 'blocks.19.mlp.hook_gate', 'blocks.20.attn.hook_q', 'blocks.20.attn.hook_k', 'blocks.20.attn.hook_v', 'blocks.20.attn.hook_result', 'blocks.20.mlp.hook_pre', 'blocks.20.mlp.hook_post', 'blocks.20.mlp.hook_gate', 'blocks.21.attn.hook_q', 'blocks.21.attn.hook_k', 'blocks.21.attn.hook_v', 'blocks.21.attn.hook_result', 'blocks.21.mlp.hook_pre', 'blocks.21.mlp.hook_post', 'blocks.21.mlp.hook_gate', 'blocks.22.attn.hook_q', 'blocks.22.attn.hook_k', 'blocks.22.attn.hook_v', 'blocks.22.attn.hook_result', 'blocks.22.mlp.hook_pre', 'blocks.22.mlp.hook_post', 'blocks.22.mlp.hook_gate', 'blocks.23.attn.hook_q', 'blocks.23.attn.hook_k', 'blocks.23.attn.hook_v', 'blocks.23.attn.hook_result', 'blocks.23.mlp.hook_pre', 'blocks.23.mlp.hook_post', 'blocks.23.mlp.hook_gate', 'blocks.24.attn.hook_q', 'blocks.24.attn.hook_k', 'blocks.24.attn.hook_v', 'blocks.24.attn.hook_result', 'blocks.24.mlp.hook_pre', 'blocks.24.mlp.hook_post', 'blocks.24.mlp.hook_gate', 'blocks.25.attn.hook_q', 'blocks.25.attn.hook_k', 'blocks.25.attn.hook_v', 'blocks.25.attn.hook_result', 'blocks.25.mlp.hook_pre', 'blocks.25.mlp.hook_post', 'blocks.25.mlp.hook_gate', 'blocks.26.attn.hook_q', 'blocks.26.attn.hook_k', 'blocks.26.attn.hook_v', 'blocks.26.attn.hook_result', 'blocks.26.mlp.hook_pre', 'blocks.26.mlp.hook_post', 'blocks.26.mlp.hook_gate', 'blocks.27.attn.hook_q', 'blocks.27.attn.hook_k', 'blocks.27.attn.hook_v', 'blocks.27.attn.hook_result', 'blocks.27.mlp.hook_pre', 'blocks.27.mlp.hook_post', 'blocks.27.mlp.hook_gate']
Memory at start for nonlocalized: 0.0
  0%|          | 0/50 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
  2%|▏         | 1/50 [01:06<54:18, 66.50s/it]  4%|▍         | 2/50 [01:22<29:12, 36.51s/it]  6%|▌         | 3/50 [01:36<20:51, 26.64s/it]  8%|▊         | 4/50 [01:52<16:59, 22.16s/it] 10%|█         | 5/50 [02:07<14:41, 19.59s/it] 12%|█▏        | 6/50 [02:22<13:18, 18.16s/it] 14%|█▍        | 7/50 [02:37<12:19, 17.19s/it] 16%|█▌        | 8/50 [02:53<11:38, 16.63s/it] 18%|█▊        | 9/50 [03:08<11:03, 16.18s/it] 20%|██        | 10/50 [03:23<10:33, 15.84s/it] 22%|██▏       | 11/50 [03:38<10:07, 15.59s/it] 24%|██▍       | 12/50 [03:54<09:54, 15.64s/it] 26%|██▌       | 13/50 [04:09<09:38, 15.64s/it] 28%|██▊       | 14/50 [04:26<09:34, 15.96s/it] 30%|███       | 15/50 [04:42<09:19, 16.00s/it] 32%|███▏      | 16/50 [04:58<09:03, 15.97s/it] 34%|███▍      | 17/50 [05:14<08:41, 15.81s/it] 36%|███▌      | 18/50 [05:29<08:22, 15.69s/it] 38%|███▊      | 19/50 [05:44<08:03, 15.61s/it] 40%|████      | 20/50 [06:00<07:49, 15.63s/it] 42%|████▏     | 21/50 [06:15<07:28, 15.48s/it] 44%|████▍     | 22/50 [06:30<07:11, 15.41s/it] 46%|████▌     | 23/50 [06:46<06:57, 15.46s/it] 48%|████▊     | 24/50 [07:02<06:45, 15.58s/it] 50%|█████     | 25/50 [07:17<06:27, 15.52s/it]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
 52%|█████▏    | 26/50 [07:56<08:56, 22.34s/it] 54%|█████▍    | 27/50 [08:11<07:44, 20.21s/it] 56%|█████▌    | 28/50 [08:27<06:58, 19.01s/it] 58%|█████▊    | 29/50 [08:43<06:18, 18.02s/it] 60%|██████    | 30/50 [08:59<05:50, 17.52s/it] 62%|██████▏   | 31/50 [09:15<05:21, 16.92s/it] 64%|██████▍   | 32/50 [09:30<04:59, 16.61s/it] 66%|██████▌   | 33/50 [09:46<04:36, 16.28s/it] 68%|██████▊   | 34/50 [10:02<04:20, 16.30s/it] 70%|███████   | 35/50 [10:18<04:03, 16.24s/it] 72%|███████▏  | 36/50 [10:34<03:44, 16.01s/it] 74%|███████▍  | 37/50 [10:50<03:27, 15.94s/it] 76%|███████▌  | 38/50 [11:06<03:12, 16.07s/it] 78%|███████▊  | 39/50 [11:22<02:55, 15.91s/it] 80%|████████  | 40/50 [11:38<02:40, 16.06s/it] 82%|████████▏ | 41/50 [11:54<02:24, 16.06s/it] 84%|████████▍ | 42/50 [12:11<02:10, 16.27s/it] 86%|████████▌ | 43/50 [12:26<01:52, 16.07s/it] 88%|████████▊ | 44/50 [12:42<01:36, 16.04s/it] 90%|█████████ | 45/50 [12:59<01:20, 16.09s/it] 92%|█████████▏| 46/50 [13:15<01:04, 16.12s/it] 94%|█████████▍| 47/50 [13:30<00:47, 16.00s/it] 96%|█████████▌| 48/50 [13:47<00:32, 16.02s/it] 98%|█████████▊| 49/50 [14:03<00:16, 16.18s/it]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
100%|██████████| 50/50 [14:41<00:00, 22.64s/it]100%|██████████| 50/50 [14:41<00:00, 17.63s/it]
After epoch, mem is  59.2310528755188
Running adversarial evals
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
Before side effect eval, mem is  44.7935528755188
Running side effects evals
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
Running adversarial evals
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
Before side effect eval, mem is  44.7935528755188
Running side effects evals
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
After epoch, mem is  59.2310528755188
Running adversarial evals
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
No injection, using original sports
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
forget_indices: range(0, 64)
Before side effect eval, mem is  44.7935528755188
Running side effects evals
After empty cache and del optimizer and scheduler:  15.918552875518799
Not saving model for nonlocalized
False
15.918552875518799
15.918552875518799
All evaluations complete
wandb: - 0.028 MB of 0.028 MB uploadedwandb: \ 0.028 MB of 0.028 MB uploadedwandb: | 0.039 MB of 0.055 MB uploadedwandb: 
wandb: Run history:
wandb:                                 MMLU ▁█▃
wandb:       adversarial_MC_Injected_forget ▁██
wandb:     adversarial_MC_Injected_maintain ▅█▁
wandb:                adversarial_MC_forget █▁▁
wandb:              adversarial_MC_maintain ▂█▁
wandb:   adversarial_Normal_Injected_forget ▁██
wandb: adversarial_Normal_Injected_maintain ▁▇█
wandb:            adversarial_Normal_forget █▁▁
wandb:          adversarial_Normal_maintain █▁▂
wandb:           forget_sport_test_accuracy ▆███▇▇▇▇▄▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:               forget_sport_test_loss ▁▁▁▁▁▁▁▁▂▂▃▄▅▅▆▆▆▆▆▆▇▇▇▇████████████████
wandb:         maintain_sport_test_accuracy ▁▂▂▂▂▂▂▂▃▄▅▆▇███████████████████████████
wandb:             maintain_sport_test_loss █▆▆▆▆▆▅▅▅▄▄▃▁▂▁▁▁▂▁▁▁▁▁▁▁▁▂▁▂▂▁▁▁▁▁▁▂▁▁▂
wandb:           maintain_sports_train_loss ▂█▇▆▆▆▆▆▅▅▅▄▂▂▂▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁
wandb:                   pile_test_accuracy ▆▅▁▄▅▄▃▃▄▄▇▂▆▃▅▃▆▇▇▇▇▅▆█▂▅▇▇▄▄▄▆▆▃▃▆▄▅█▁
wandb:                       pile_test_loss █▆▆▇█▆█▅▅▄▆▇▆▅▇▅▇▄▆▇█▂▆▆▅▄▅▃▆▄▇▅▁▆▅▅▅▆▇▆
wandb:                      pile_train_loss ▅▆▅▇▄▄▅▅▂██▂█▃▇▂▅▆▅▅▇▂▃▅▄▁▃▄▃▅▄▅▃▆▃▃▇▇▁█
wandb:          sports_injection_train_loss █▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                 MMLU 0.6
wandb:       adversarial_MC_Injected_forget 0.1928
wandb:     adversarial_MC_Injected_maintain 0.04386
wandb:                adversarial_MC_forget 0.67568
wandb:              adversarial_MC_maintain 0.8619
wandb:   adversarial_Normal_Injected_forget 0.67552
wandb: adversarial_Normal_Injected_maintain 0.1538
wandb:            adversarial_Normal_forget 0.25414
wandb:          adversarial_Normal_maintain 0.72444
wandb:           forget_sport_test_accuracy 0.00024
wandb:               forget_sport_test_loss 10.82171
wandb:         maintain_sport_test_accuracy 0.9972
wandb:             maintain_sport_test_loss 0.17726
wandb:           maintain_sports_train_loss 0.00251
wandb:                   pile_test_accuracy 0.49526
wandb:                       pile_test_loss 2.32078
wandb:                      pile_train_loss 2.44705
wandb:          sports_injection_train_loss 0.00025
wandb: 
wandb: 🚀 View run finetuning_nonlocalized_forget_first_64_unsplit_inject_random_without_golf at: https://wandb.ai/quirky_lats_at_mats/circuit_breaking/runs/3pw1rkps
wandb: ⭐️ View project at: https://wandb.ai/quirky_lats_at_mats/circuit_breaking
wandb: Synced 6 W&B file(s), 0 media file(s), 2 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20241120_061755-3pw1rkps/logs
